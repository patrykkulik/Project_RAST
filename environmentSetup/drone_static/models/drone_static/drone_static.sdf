<?xml version='1.0'?>
<sdf version='1.6'>
  <model name='uav1'>
    <link name='base_link'>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>1.9</mass>
        <inertia>
          <ixx>0.029125</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.029125</iyy>
          <iyz>0</iyz>
          <izz>0.055225</izz>
        </inertia>
      </inertial>
      <collision name='base_link_inertia_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.6082 0.441 0.248</size>
          </box>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='base_link_inertia_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://drone_static/meshes/drone_body.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/White</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <link name='/imu_link'>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.015</mass>
        <inertia>
          <ixx>1e-05</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-05</iyy>
          <iyz>0</iyz>
          <izz>1e-05</izz>
        </inertia>
      </inertial>
    </link>
    <joint name='/imu_joint' type='revolute'>
      <child>/imu_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='rotor_0'>
      <pose frame=''>0.18623 -0.085 0.124 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_0_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.0762</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_0_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model:///drone_static/meshes/rotor_spinner.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='rotor_0_joint' type='revolute'>
      <child>rotor_0</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='rotor_1'>
      <pose frame=''>-0.18623 0.085 0.124 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_1_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.0762</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_1_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model:///drone_static/meshes/rotor_spinner.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/DarkGrey</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='rotor_1_joint' type='revolute'>
      <child>rotor_1</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='rotor_2'>
      <pose frame=''>0.18623 0.085 0.124 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_2_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.0762</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_2_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model:///drone_static/meshes/rotor_spinner.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='rotor_2_joint' type='revolute'>
      <child>rotor_2</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='rotor_3'>
      <pose frame=''>-0.18623 -0.085 0.124 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000273104</iyy>
          <iyz>0</iyz>
          <izz>0.000274004</izz>
        </inertia>
      </inertial>
      <collision name='rotor_3_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.0762</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='rotor_3_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model:///drone_static/meshes/rotor_spinner.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/DarkGrey</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='rotor_3_joint' type='revolute'>
      <child>rotor_3</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

 <!-- Ultrasonic sensors here-->
    <link name="sonar_rotor_0_top">
      <pose frame=''>0.18623 -0.085 0.17 0 -1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_0_top" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_0_top</topicName>
        <frameId>sonar_rotor_0_top</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_0_top_sensor_joint' type='fixed'>
      <parent>rotor_0</parent>
      <child>sonar_rotor_0_top</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

   <link name="sonar_rotor_0_bottom">
      <pose frame=''>0.18623 -0.085 -0.12 0 1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_0_bottom" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_0_bottom</topicName>
        <frameId>sonar_rotor_0_bottom</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_0_bottom_sensor_joint' type='fixed'>
      <parent>rotor_0</parent>
      <child>sonar_rotor_0_bottom</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint> 

  <link name="sonar_rotor_1_top">
      <pose frame=''>-0.18623 0.085 0.17 0 -1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_1_top" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_1_top</topicName>
        <frameId>sonar_rotor_1_top</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_1_top_sensor_joint' type='fixed'>
      <parent>rotor_1</parent>
      <child>sonar_rotor_1_top</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

   <link name="sonar_rotor_1_bottom">
      <pose frame=''>-0.18623 0.085 -0.12 0 1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_1_bottom" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_1_bottom</topicName>
        <frameId>sonar_rotor_1_bottom</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_1_bottom_sensor_joint' type='fixed'>
      <parent>rotor_1</parent>
      <child>sonar_rotor_1_bottom</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint> 

   <link name="sonar_rotor_2_top">
      <pose frame=''>0.18623 0.085 0.17 0 -1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_2_top" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_2_top</topicName>
        <frameId>sonar_rotor_2_top</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_2_top_sensor_joint' type='fixed'>
      <parent>rotor_2</parent>
      <child>sonar_rotor_2_top</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

   <link name="sonar_rotor_2_bottom">
      <pose frame=''>0.18623 0.085 -0.12 0 1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_2_bottom" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_2_bottom</topicName>
        <frameId>sonar_rotor_2_bottom</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_2_bottom_sensor_joint' type='fixed'>
      <parent>rotor_2</parent>
      <child>sonar_rotor_2_bottom</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>  

  <link name="sonar_rotor_3_top">
      <pose frame=''>-0.18623 -0.085 0.17 0 -1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_3_top" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_3_top</topicName>
        <frameId>sonar_rotor_3_top</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_3_top_sensor_joint' type='fixed'>
      <parent>rotor_3</parent>
      <child>sonar_rotor_3_top</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

   <link name="sonar_rotor_3_bottom">
      <pose frame=''>-0.18623 -0.085 -0.12 0 1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
        <!-- mesh>
          <uri>
            model://meshes/max_sonar_ez4.dae
          </uri>
        </mesh> -->
      </geometry>
    </visual>

    <sensor name="sonar_3_bottom" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/distance_3_bottom</topicName>
        <frameId>sonar_rotor_3_bottom</frameId>
      </plugin>
    </sensor>
    
  </link>

  <joint name='rotor_3_bottom_sensor_joint' type='fixed'>
      <parent>rotor_3</parent>
      <child>sonar_rotor_3_bottom</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint> 


    
<!-- motor, edited values with estimates-->

    <plugin name='rosbag' filename='libgazebo_multirotor_base_plugin.so'>
      <robotNamespace/>
      <linkName>base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
    <plugin name='front_right_motor_model' filename='libgazebo_motor_model_gdp2020.so'>
      <robotNamespace/>
      <jointName>rotor_0_joint</jointName>
      <linkName>rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>3237</maxRotVelocity>
      <motorConstant>2.27e-06</motorConstant>
      <momentConstant>0.0159</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
    <plugin name='back_left_motor_model' filename='libgazebo_motor_model_gdp2020.so'>
      <robotNamespace/>
      <jointName>rotor_1_joint</jointName>
      <linkName>rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>3237</maxRotVelocity>
      <motorConstant>2.27e-06</motorConstant>
      <momentConstant>0.0159</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
    <plugin name='front_left_motor_model' filename='libgazebo_motor_model_gdp2020.so'>
      <robotNamespace/>
      <jointName>rotor_2_joint</jointName>
      <linkName>rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>3237</maxRotVelocity>
      <motorConstant>2.27e-06</motorConstant>
      <momentConstant>0.0159</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
    <plugin name='back_right_motor_model' filename='libgazebo_motor_model_gdp2020.so'>
      <robotNamespace/>
      <jointName>rotor_3_joint</jointName>
      <linkName>rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>3237</maxRotVelocity>
      <motorConstant>2.27e-06</motorConstant>
      <momentConstant>0.0159</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
    <plugin name='gps_plugin' filename='libgazebo_gps_plugin.so'>
      <robotNamespace/>
      <gpsNoise>1</gpsNoise>
    </plugin>
    <plugin name='magnetometer_plugin' filename='libgazebo_magnetometer_plugin.so'>
      <robotNamespace/>
      <pubRate>20</pubRate>
      <noiseDensity>0.0004</noiseDensity>
      <randomWalk>6.4e-06</randomWalk>
      <biasCorrelationTime>600</biasCorrelationTime>
      <magTopic>/mag</magTopic>
    </plugin>
    <plugin name='barometer_plugin' filename='libgazebo_barometer_plugin.so'>
      <robotNamespace/>
      <pubRate>10</pubRate>
      <baroTopic>/baro</baroTopic>
    </plugin>
    <plugin name='mavlink_interface' filename='libgazebo_mavlink_interface.so'>
      <robotNamespace/>
      <imuSubTopic>/imu</imuSubTopic>
      <gpsSubTopic>/gps</gpsSubTopic>
      <magSubTopic>/mag</magSubTopic>
      <baroSubTopic>/baro</baroSubTopic>
      <mavlink_addr>INADDR_ANY</mavlink_addr>
      <mavlink_udp_port>14560</mavlink_udp_port>
      <mavlink_tcp_port>4560</mavlink_tcp_port>
      <serialEnabled>0</serialEnabled>
      <serialDevice>/dev/ttyACM0</serialDevice>
      <baudRate>921600</baudRate>
      <qgc_addr>INADDR_ANY</qgc_addr>
      <qgc_udp_port>14550</qgc_udp_port>
      <sdk_addr>INADDR_ANY</sdk_addr>
      <sdk_udp_port>14540</sdk_udp_port>
      <hil_mode>0</hil_mode>
      <hil_state_level>0</hil_state_level>
      <vehicle_is_tailsitter>0</vehicle_is_tailsitter>
      <send_vision_estimation>1</send_vision_estimation>
      <send_odometry>0</send_odometry>
      <enable_lockstep>1</enable_lockstep>
      <use_tcp>1</use_tcp>
      <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      <control_channels>
        <channel name='rotor1'>
          <input_index>0</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor2'>
          <input_index>1</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor3'>
          <input_index>2</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor4'>
          <input_index>3</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor5'>
          <input_index>4</input_index>
          <input_offset>1</input_offset>
          <input_scaling>324.6</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
          <joint_control_pid>
            <p>0.1</p>
            <i>0</i>
            <d>0</d>
            <iMax>0.0</iMax>
            <iMin>0.0</iMin>
            <cmdMax>2</cmdMax>
            <cmdMin>-2</cmdMin>
          </joint_control_pid>
          <joint_name>zephyr_delta_wing::propeller_joint</joint_name>
        </channel>
        <channel name='rotor6'>
          <input_index>5</input_index>
          <input_offset>0</input_offset>
          <input_scaling>0.524</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position</joint_control_type>
          <joint_name>zephyr_delta_wing::flap_left_joint</joint_name>
          <joint_control_pid>
            <p>10.0</p>
            <i>0</i>
            <d>0</d>
            <iMax>0</iMax>
            <iMin>0</iMin>
            <cmdMax>20</cmdMax>
            <cmdMin>-20</cmdMin>
          </joint_control_pid>
        </channel>
        <channel name='rotor7'>
          <input_index>6</input_index>
          <input_offset>0</input_offset>
          <input_scaling>0.524</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position</joint_control_type>
          <joint_name>zephyr_delta_wing::flap_right_joint</joint_name>
          <joint_control_pid>
            <p>10.0</p>
            <i>0</i>
            <d>0</d>
            <iMax>0</iMax>
            <iMin>0</iMin>
            <cmdMax>20</cmdMax>
            <cmdMin>-20</cmdMin>
          </joint_control_pid>
        </channel>
        <channel name='rotor8'>
          <input_index>7</input_index>
          <input_offset>0</input_offset>
          <input_scaling>0.524</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position</joint_control_type>
        </channel>
      </control_channels>
    </plugin>
    <static>0</static>
    <plugin name='rotors_gazebo_imu_plugin' filename='libgazebo_imu_plugin.so'>
      <robotNamespace/>
      <linkName>/imu_link</linkName>
      <imuTopic>/imu</imuTopic>
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
    </plugin>

  <!-- for stereo camera - Tai Ming-->
    <joint name='stereo_cam_joint' type='fixed'>
      <parent>base_link</parent>
      <child>stereo_camera</child>
      <pose> 0.2385 0 0.038 0 0 0 </pose>
    </joint> 

    <link name="stereo_camera">
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.001</mass>
        <inertia>
          <ixx>0.00000166667</ixx>
          <iyy>0.00000166667</iyy>
          <izz>0.00000166667</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.015 0.1 0.02</size>
          </box>
        </geometry>
      </visual>
      <sensor name="camera" type="multicamera">
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
        <camera name="left">
          <pose>0 0.06 0 0 0 0</pose>
          <horizontal_fov>1.5708</horizontal_fov>
          <image>
            <width>752</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>300</far>
          </clip>
        </camera>
        <camera name="right">
          <pose>0 -0.06 0 0 0 0</pose>
          <horizontal_fov>1.5708</horizontal_fov>
          <image>
            <width>752</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>300</far>
          </clip>
        </camera>
        <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
          <robotNamespace></robotNamespace>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/stereo_camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>stereo_camera_frame</frameName>
          <hackBaseline>0.12</hackBaseline>
          <Fx>376.0</Fx>
          <Fy>376.0</Fy>
          <Cx>376.0</Cx>
          <Cy>240.0</Cy>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
        </plugin>
      </sensor>
    </link>



    <!-- for 360 lidar - Tai Ming-->
    <joint name='lidar_joint' type='fixed'>
      <parent>base_link</parent>
      <child>lidar</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint> 

    <link name="lidar">
      <pose> 0 0 -0.04 0 0 0 </pose>
   <inertial>      
    <mass>0.001</mass>     
     <inertia> <!-- inertias are tricky to compute -->          
     <ixx>0.001</ixx>      
     <!-- for a box: ixx = 0.083 * mass * (y*y + z*z) -->      
    <ixy>0.0</ixy>      
    <!-- for a box: ixy = 0 -->     
    <ixz>0.0</ixz>        
    <!-- for a box: ixz = 0 -->        
    <iyy>0.001</iyy>       
    <!-- for a box: iyy = 0.083 * mass * (x*x + z*z) -->                
    <iyz>0.0</iyz>        
    <!-- for a box: iyz = 0 -->       
      <izz>0.001</izz>      
    <!-- for a box: izz = 0.083 * mass * (x*x + y*y) -->              
    </inertia>    
   </inertial>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://hokuyo_lidar/meshes/hokuyo.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <collision name="lidar_collision_base">
        <pose>0 0 -0.0145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.05 0.05 0.041</size>
          </box>
        </geometry>
      </collision>
      <collision name="lidar_collision_top">
        <pose>0 0 0.0205 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.021</radius>
            <length>0.029</length>
          </cylinder>
        </geometry>
      </collision>
      <sensor name="laser" type="ray">
        <pose>0.01 0 0.0175 0 -0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>640</samples>
              <resolution>1</resolution>
              <min_angle>-3.14</min_angle>
              <max_angle>3.14</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.08</min>
            <max>10</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
     
  <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
         <robotNamespace></robotNamespace>
         <topicName>/uav1/lidar/range</topicName>
         <frameName>lidar_laser_2d</frameName>
  </plugin>
        <always_on>1</always_on>
        <update_rate>500</update_rate>
        <visualize>true</visualize>
      </sensor>
   
    </link>


    <!-- for ultrasonic sensor top- Tai Ming-->
    
    <joint name='ultrasonic_sensor_top_joint' type='fixed'>
      <parent>base_link</parent>
      <child>ultrasonic_sensor_top</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

    <link name="ultrasonic_sensor_top">
      <pose frame=''>0 0 0.15 0 -1.5708 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </visual>

    <sensor name="ultrasonic_top" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/uav1/ultrasonic/top</topicName>
        <frameId>ultrasonic_sensor_top</frameId>
      </plugin>
    </sensor>
    
  </link>


  <!-- for ultrasonic sensor front- Tai Ming-->

    <joint name='ultrasonic_sensor_front_joint' type='fixed'>
      <parent>base_link</parent>
      <child>ultrasonic_sensor_front</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

    <link name="ultrasonic_sensor_front">
      <pose frame=''>0.3 0 0.0085 0 0 0</pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </visual>

    <sensor name="ultrasonic_front" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/uav1/ultrasonic/front</topicName>
        <frameId>ultrasonic_sensor_front</frameId>
      </plugin>
    </sensor>
    
  </link>

  <!-- for ultrasonic sensor bottom- Tai Ming-->

    <joint name='ultrasonic_sensor_bottom_joint' type='fixed'>
      <parent>base_link</parent>
      <child>ultrasonic_sensor_bottom</child>
      <pose> 0 0 0 0 0 0 </pose>
    </joint>

    <link name="ultrasonic_sensor_bottom">
      <pose frame=''> 0 0 -0.12 0 1.5708 0 </pose>
    <inertial>
      <pose frame=''>0 0 0 0 0 0</pose>
      
      
      <mass>0.001</mass>
      <inertia>
       <ixx>0.000000017</ixx>
       <ixy>0</ixy>
       <ixz>0</ixz>
       <iyy>0.000000017</iyy>
       <iyz>0</iyz>
       <izz>0.000000017</izz>
     </inertia>
    </inertial>
    <collision name="collision">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </collision>
    <visual name="visual">
      <pose frame=''>0 0 0 0 -0 0</pose>
      <geometry>
        <box>
          <size>0.001 0.001 0.001</size>
        </box>
      </geometry>
    </visual>

    <sensor name="ultrasonic_bottom" type="ray">
      <!-- always_on>true</always_on> -->
      <update_rate>20</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <!-- Minimum angle in radians -->
            <!-- 5 degs -->
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087266</min_angle>
            <max_angle> 0.087266</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>1</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <!-- noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise> -->
        <topicName>/uav1/ultrasonic/bottom</topicName>
        <frameId>ultrasonic_sensor_bottom</frameId>
      </plugin>
    </sensor>
    
  </link>

  </model>
</sdf>
